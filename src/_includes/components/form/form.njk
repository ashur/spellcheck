{#
 # @param {Object[]} fields
 # @param {string} [name]
 # @param {Object} submit
 # @param {string} submit.value
 #}
{% macro render(
	fields,
	name,
	submit
) %}
{%- from "system/component.njk" import component with context -%}
<form class="stack | form"
	netlify
	{{ ('name="' + name + '"') | safe if name }}
>
	{% for field in fields %}
		{% set name = field.name or (field.label | lower) %}
		{% set id = field.id or name %}
		{% set isRequired = (field.optional != true) and (field.type != 'button')  %}
		{% set requiredAttr = 'required="required"' if isRequired == true %}
		<div class="stack-xs | form__group">
			{% if field.label %}
			<label class="form__label {{ 'form__label--required' if isRequired }}"
				for="{{ id }}"
			>{{ field.label }}</label>
			{% endif %}

			{% if field.type == 'textarea' %}
				<textarea class="form__element"
					id="{{ id }}"
					name="{{ name }}"
					{{ requiredAttr }}
				></textarea>

			{% elif field.type == 'select' %}
				<select class="form__element"
					id="{{ id }}"
					name="{{ name }}"
					{{ requiredAttr }}
				>
					<option value="" disabled selected="selected"></option>
					{% for option in field.options %}
						<option value="{{ option }}">{{ option }}</option>
					{% endfor %}
				</select>

			{% else %}
				<input class="form__element"
					id="{{ id }}"
					name="{{ name }}"
					{{ requiredAttr }}
					type="{{ field.type }}"
				/>
			{% endif %}
		</div>
	{% endfor %}

	{% if submit %}
	<button class="form__element"
		type="submit"
	>
		{{ submit.value }}
	</button>
	{% endif %}
</form>

{{ component("toast") }}

<script>
	(() =>
	{
		const handleSubmit = async (event) =>
		{
			event.preventDefault();

			const formData = new FormData( event.target );

			try
			{
				await fetch( "/", {
					method: "POST",
					headers: { "Content-Type": "application/x-www-form-urlencoded" },
					body: new URLSearchParams( formData ).toString(),
				});

				showToast(`{{ submit.success_message }}`, 'success');
				event.target.reset();
			}
			catch (error)
			{
				console.error(error);
				showToast(`{{ submit.error_message }}`, 'error')
			}
		};

		document.querySelector( "form" ).addEventListener( "submit", handleSubmit );
	})();
</script>
{% endmacro %}
